// <auto-generated />
using System;
using KoshienGameBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KoshienGameBackend.Migrations
{
    [DbContext(typeof(GameDbContext))]
    partial class GameDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("FieldingRangeProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("_1B")
                        .HasColumnType("INTEGER");

                    b.Property<int>("_2B")
                        .HasColumnType("INTEGER");

                    b.Property<int>("_3B")
                        .HasColumnType("INTEGER");

                    b.Property<int>("_C")
                        .HasColumnType("INTEGER");

                    b.Property<int>("_CF")
                        .HasColumnType("INTEGER");

                    b.Property<int>("_LF")
                        .HasColumnType("INTEGER");

                    b.Property<int>("_P")
                        .HasColumnType("INTEGER");

                    b.Property<int>("_RF")
                        .HasColumnType("INTEGER");

                    b.Property<int>("_SS")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("FieldingRangeProfile");
                });

            modelBuilder.Entity("KoshienGameBackend.Models.Arsenal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.ToTable("Arsenal");
                });

            modelBuilder.Entity("KoshienGameBackend.Models.PersonalityProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BaseballIQ")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Charisma")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Coachability")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Composure")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Flair")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fortitude")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkEthic")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PersonalityProfile");
                });

            modelBuilder.Entity("KoshienGameBackend.Models.Pitch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArsenalId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Control")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Movement")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Velocity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ArsenalId");

                    b.ToTable("Pitch");
                });

            modelBuilder.Entity("KoshienGameBackend.Models.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double?>("AbilitySigma")
                        .HasColumnType("REAL");

                    b.Property<int>("ArmAccuracy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArmStrength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BattingEye")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BattingSide")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BondsJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Confidence")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Contact")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CoreStrength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Energy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FieldingOverall")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FieldingRangeProfileId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FieldingTechnique")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GameCalling")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GamePower")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasPitchingHistory")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HeightCm")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HittingArchetype")
                        .HasColumnType("TEXT");

                    b.Property<int>("HittingOverall")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HittingPotentialArchetype")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonalityProfileId")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("PersonalitySigma")
                        .HasColumnType("REAL");

                    b.Property<string>("PitchingArchetype")
                        .HasColumnType("TEXT");

                    b.Property<int>("PitchingControl")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PitchingMovement")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PitchingOverall")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PitchingStamina")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PitchingVelocity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PotentialCoordination")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PotentialHitting")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("PotentialSigma")
                        .HasColumnType("REAL");

                    b.Property<int>("PotentialSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PotentialStrength")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PrimaryPosition")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RawStrength")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ThrowingHand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FieldingRangeProfileId");

                    b.HasIndex("PersonalityProfileId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("KoshienGameBackend.Models.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prefecture")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("KoshienGameBackend.Models.Arsenal", b =>
                {
                    b.HasOne("KoshienGameBackend.Models.Player", "Player")
                        .WithOne("Arsenal")
                        .HasForeignKey("KoshienGameBackend.Models.Arsenal", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("KoshienGameBackend.Models.Pitch", b =>
                {
                    b.HasOne("KoshienGameBackend.Models.Arsenal", "Arsenal")
                        .WithMany("Pitches")
                        .HasForeignKey("ArsenalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arsenal");
                });

            modelBuilder.Entity("KoshienGameBackend.Models.Player", b =>
                {
                    b.HasOne("FieldingRangeProfile", "FieldingRange")
                        .WithMany()
                        .HasForeignKey("FieldingRangeProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoshienGameBackend.Models.PersonalityProfile", "Personality")
                        .WithMany()
                        .HasForeignKey("PersonalityProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoshienGameBackend.Models.School", null)
                        .WithMany("Players")
                        .HasForeignKey("SchoolId");

                    b.Navigation("FieldingRange");

                    b.Navigation("Personality");
                });

            modelBuilder.Entity("KoshienGameBackend.Models.Arsenal", b =>
                {
                    b.Navigation("Pitches");
                });

            modelBuilder.Entity("KoshienGameBackend.Models.Player", b =>
                {
                    b.Navigation("Arsenal");
                });

            modelBuilder.Entity("KoshienGameBackend.Models.School", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
